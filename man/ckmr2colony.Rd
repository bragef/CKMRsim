% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ckmr2colony.R
\name{ckmr2colony}
\alias{ckmr2colony}
\title{make a rudimentary colony input file}
\usage{
ckmr2colony(CKF, CKG, freqs_known = TRUE, outfile = "Colony2.dat",
  err_rate = c(0.01), drop_rate = c(0.01))
}
\arguments{
\item{CKF}{a data frame like long_markers that has the allele freqs and indexes, etc.}

\item{CKG}{a data frame of genotype data.  It needs to have these columns:
\describe{
\item{id}{the identifier of the individual}
\item{Locus}{the names of the loci}
\item{LocIdx}{the index of the locus (should correspond exactly to CKF)}
\item{alle1}{The integer index of the allelic type of the first gene copy in the indiv.}
\item{alle2}{The integer index of the allelic type of the second gene copy in the indiv.}
}}

\item{freqs_known}{set to FALSE if you want Colony to estimate the allele freqs.  Otherwise
it will just use the freqs from CKF (This makes a lot of sense if you have 10,000 individuals
but you don't want to run all of them in Colony)}

\item{outfile}{path to the output file to send this to}

\item{err_rate}{the per-locus rate of mis-genotyped loci assumed for the analysis.  Recycles to the
proper length.}

\item{drop_rate}{the per-locus rate of assumed for the analysis. Recycles to the proper length.}
}
\description{
This takes a long format data frame of CKMR frequencies and a corresponding
one of genotypes of individuals (gotta have LocIdx and alle1 and alle2 columns,
which give the integer representation of the alleles).  Then it spits out
a colony file with allele freqs either specified (by default) or not.
}
\details{
The idea is that you use this to follow up on clusters of pairs that look like
they might be sibs of some sort.  This spits out a Colony2.dat file that can
be run with Colony.  To change different settings and options for the run, you
just hand edit that output file.
}

